[user]
    name = rbetzler
    email = rbetzler94@gmail.com

[color]
    diff = auto
    status = auto
    branch = auto
    ui = auto

[alias]
    a = add
    ap = "add -p"
    b = branch
    bl = "branch -l"
    bd = "branch -D"
    b-current = "!git branch --no-color 2> /dev/null | sed -e '/^[^*]/d; s/^* //;'"
    b-exists =  "!f() { \
      git show-ref --verify --quiet refs/heads/$1; \
    }; f"
    b-primary = !bash ~/.git_aliases/get_primary_branch
    c = commit
    co = checkout
    cob = "checkout -b"
    coh = "!f() { \
      git co HEAD~\"$1\"; \
    }; f"
    # Use ${GIT_PREFIX:-./} to resolve to the current directory
    # e.g., when needing to reference relative filepaths
    coh-file = "!f() { \
      git co HEAD~\"$1\" -- ${GIT_PREFIX:-./}\"$2\"; \
    }; f"
    cob-primary = !bash ~/.git_aliases/checkout_off_primary
    co-theirs = "co --theirs"
    cma = "commit --amend --no-edit"
    cma-message = "commit --amend"
    cmm = "commit -m"
    chpk = "cherry-pick"
    chpka = "chpk --abort"
    chpkc = "chpk --continue"
    df = "!f() { \
      git diff --name-only --diff-filter=d | xargs bat --diff; \
    }; f"    ft-upstream = !bash ~/.git_aliases/fetch_upstream
    dfc = "!f() { \
      git diff --cached --name-only --diff-filter=d | xargs bat --diff; \
    }; f"    ft-upstream = !bash ~/.git_aliases/fetch_upstream
    l = log
    l-feat-commits = !bash ~/.git_aliases/log_feature_commits
    l-feat-hashs = !bash ~/.git_aliases/log_feature_commits 0
    p = push
    pf = "push -f"
    pfl = "push --force-with-lease"
    pr-draft = "!f() { \
      hub pull-request --push --no-edit --draft; \
    }; f"
    pr-list = !bash ~/.git_aliases/list_prs 0
    pr-list-mine = !bash ~/.git_aliases/list_prs 1
    pr-list-work-team = !bash ~/.git_aliases/list_prs 2
    pr-open = "!f() { \
      hub pull-request --push --no-edit; \
    }; f"
    psu = !bash ~/.git_aliases/push_set_upstream
    pl = pull
    rb = rebase
    rba = "rebase --abort"
    rbc = "rebase --continue"
    rbi = "rebase -i"
    rbih = "!f() { \
      git rbi HEAD~\"$1\"; \
    }; f"
    rbih-merges = "!f() { \
      git rbi HEAD~\"$1\" --rebase-merges; \
    }; f"
    rb-primary = !bash ~/.git_aliases/rebase_off_primary
    rflg = "!f() { \
      git reflog --grep-reflog=\"$1\"; \
    }; f"
    rset = reset
    rset-head = "!f() { \
      git reset HEAD~\"$1\"; \
    }; f"
    rset-hard = "!f() { \
      git reset --hard origin/\"$1\"; \
    }; f"
    rset-current = "!f() { \
      git rset-hard $(git b-current); \
    }; f"
    rset-primary = "!f() { \
      git rset-hard $(git b-primary); \
    }; f"
    rstr-stg = "restore --stage"
    rvrt = revert
    rvrt-a = "revert --abort"
    rvrt-c = "revert --continue"
    rvrt-no-commit = "revert --no-commit"
    rvrt-no-commit-head = "rvrt-no-commit HEAD"
    sh = show
    sha = "!f() { \
      git show HEAD~\"$1\"; \
    }; f"
    st = status
    sth = stash
    sth-a = "stash apply"
    sth-c = "stash clear"
    sth-l = "stash list"
    sth-p = "stash pop"
