---
- hosts: localhost
  connection: local
  tasks:
    # - name: Load gnome config desktop environment
    #   ansible.builtin.shell: |
    #     dconf load / < "${HOME}/.desktop.conf"
    # - name: Check for neovim plugins
    #   register: nvim_plugins
    #   ansible.builtin.stat:
    #     path: '{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim'
    # - name: Install vim plug for neovim plugins
    #   when: nvim_plugins.stat.isreg is not defined
    #   ansible.builtin.shell: |
    #     sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
    #       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    # - name: Install, update neovim plugins
    #   ansible.builtin.shell: |
    #     nvim --headless +PlugInstall +qa
    #     nvim --headless +UpdateRemotePlugins +qa
    - name: Check for nvm install
      register: nvm_plugins
      ansible.builtin.stat:
        path: '{{ ansible_env.HOME }}/.nvm/versions/node/v24.1.0/bin/npm'
    - name: Install node
      when: nvm_plugins.stat.isreg is not defined
      ansible.builtin.shell: |
        source /usr/share/nvm/init-nvm.sh
        nvm install 24.1.0
    - name: Install local proxy globally
      become: true
      ignore_errors: true
      community.general.npm:
        name: local-ssl-proxy
        executable: '{{ ansible_env.HOME }}/.nvm/versions/node/v24.1.0/bin/npm'
        global: true
    - name: Install github extensions
      ansible.builtin.shell: |
        gh extension install dlvhdr/gh-dash
    - name: Install gemini cli
      become: true
      community.general.npm:
        name: '@google/gemini-cli'
        executable: '{{ ansible_env.HOME }}/.nvm/versions/node/v24.1.0/bin/npm'
        global: true
    - name: Setup look away cron
      ansible.builtin.cron:
        name: lookaway
        minute: "*/20"
        job: /home/rlb/.bin/look_away.sh
    - name: Enable, start cronie.service
      when: ansible_facts["distribution"] == "Archlinux"
      become: true
      ansible.builtin.systemd_service:
        name: cronie.service
        enabled: true
        state: started
